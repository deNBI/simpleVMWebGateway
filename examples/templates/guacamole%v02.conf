location /{{ key_url }}/ {


    set $user_path '{{ forc_backend_path }}/users/{{backend_id}}/';
    # Run this lua block, which checks if we are authenticated (again) und filters request by JWT (via id_token.sub)
    access_by_lua_block {
            local user_service = require("user_service")
            -- Start actual openid authentication procedure
            local res, err = require("resty.openidc").authenticate(opts2)
            -- If it fails for some reason, escape via HTTP 500
            if err then
                    ngx.status = 500
                    ngx.say(err)
                    ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)
            end

            -- Protect this location and allow only one specific ELIXIR User
            if (res.id_token.sub ~= "{{ owner }}@elixir-europe.org" and not user_service.file_exists(ngx.var.user_path .. res.id_token.sub)) then
                    ngx.exit(ngx.HTTP_FORBIDDEN)
            end
    }




    proxy_pass {{ location_url }}/guacamole/;
    proxy_buffering off;
    proxy_http_version 1.1;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $http_connection;
    access_log off;
}