---
# vars file for forc_api

# Set the domain on where your service is reachable. This must match the configuration of your OIDC client.
# Ex: reverseproxy.bibiserv.projects.bi.denbi.de
DOMAIN: ""

FORC_BACKUP_ENABLED: "yes"
FORC_BACKUP_ROTATION_ENABLED: true
FORC_BACKUP_ROTATION_MAX_SIZE: 5
FORC_BACKUP_ROTATION_CUT_SIZE: 4
FORC_BACKUP_ROTATION_SIZE_TYP: GiB
FORC_BACKUP_HOST_PATH: "/persistent/backup/forc"
# Set branch to checkout.
REPOSITORY_BRANCH: "dev"

# Protect the FORC API endpoints via key header (X-API-KEY). This field needs to be set with a strong secret.
FORC_API_KEY: ""

# A key which OpenResty uses to encrypt sessions. This field needs to be set with a strong secret.
FORC_SECRET_KEY: ""

# The path on where forc will place nginx config snippets (backends). This must match with the include directive in
# OpenResty. This role will create the paths if not existing.
FORC_BACKEND_PATH: "/var/forc/backend_path/"

# The path on where forc will read jinja2 templates from. This role will create the paths if not existing.
FORC_TEMPLATE_PATH: "/var/forc/template_path/"

# The Port on which OpenResty will bind forc to.
FORC_SERVICE_PORT: 5000

# If Forc Service will use HTTPs -- if not  FORC_LOCAL_NETWORK must be provided
FORC_SERVICE_USE_HTTPS: true

#IF Forc Service does not use https needs to provided to allow requests only for the local reachable ip
FORC_LOCAL_IP: ""
# Set this to no if you don't use certbot for autogenerating ssl certs.
CERTBOT_USED: "yes"

# Set this to no if you only want to install forc as uWSGI app.
INSTALL_OPENRESTY: "yes"

# OIDC Credentials.
FORC_OIDC_DISCOVERY_URL: "https://login.elixir-czech.org/oidc/.well-known/openid-configuration"
FORC_OIDC_CLIENT_ID: ""
FORC_OIDC_CLIENT_SECRET: ""